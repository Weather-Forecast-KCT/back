Public IP address/DNS name label
20.48.224.19/weather.canadacentral.cloudapp.azure.com
https://kct-weather-api.azurewebsites.net/process/api

CREATE TABLE Weather (
   Id SERIAL PRIMARY KEY,
   Date DATE NOT NULL,
   TemperatureInside FLOAT NOT NULL,
   TemperatureOutside FLOAT NOT NULL,
   Humidity FLOAT NOT NULL,
   RainRate FLOAT NOT NULL,
   UVIndex FLOAT NOT NULL,
   WindSpeed FLOAT NOT NULL,
   Barometer FLOAT NOT NULL
);

CREATE TABLE Updates (
   Id SERIAL PRIMARY KEY,
   WeatherId INT NOT NULL,
   LastUpdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

new1:
import requests

def get_weather(param):
    url = "https://api.open-meteo.com/v1/forecast?latitude=11.01&longitude=76.97&hourly=temperature_2m,relativehumidity_2m,rain,windspeed_10m,uv_index&current_weather=true&past_days=2&forecast_days=1&timezone=auto"
    response = requests.get(url)
    data = response.json()
    #print(data)
    if param == "livetemp":
        return data["current_weather"]["temperature"]
    elif param == "livewind":
        return data["current_weather"]["windspeed"]
    elif param == "3daystemp":
        return data["hourly"]["temperature_2m"]
    elif param == "3dayshum":
        return data["hourly"]["relativehumidity_2m"]
    elif param == "3daysrain":
        return data["hourly"]["rain"]
    elif param == "3dayswind":
        return data["hourly"]["windspeed_10m"]
    elif param == "3daysuv":
        return data["hourly"]["uv_index"]
    else:
        return "Invalid Parameter"


#send 3 days data to postgres database with tables , datetime,TemperatureOutside,Humidity,RainRate,UVIndex,WindSpeed

import psycopg2
import datetime
import time

def insert_data():
    conn = psycopg2.connect(host="localhost",database="weather",user="postgres",password="clan4@cohort5")
    cur = conn.cursor()
    for i in range(0,72):
        cur.execute("INSERT INTO weatherdata (datetime,temperature,humidity,rainrate,uvindex,windspeed) VALUES (%s,%s,%s,%s,%s,%s)",(datetime.datetime.now()+datetime.timedelta(hours=i),get_weather("3daystemp")[i],get_weather("3dayshum")[i],get_weather("3daysrain")[i],get_weather("3daysuv")[i],get_weather("3dayswind")[i]))
        conn.commit()
        time.sleep(1)
    cur.close()
    conn.close()
    
    
  ---------------------------------------------

new.py

import psycopg2
import datetime
import time

# Connect to the PostgreSQL database
conn = psycopg2.connect(
    host="localhost",
    database="your_database_name",
    user="your_username",
    password="your_password"
)

# Open a cursor to perform database operations
cur = conn.cursor()

# Generate and insert weather data for each hour of the three days
for i in range(3):
    for hour in range(24):
        # Generate a timestamp for the current hour
        timestamp = datetime.datetime(2023, 4, i + 1, hour, 0, 0).strftime("%Y-%m-%d %H:%M:%S")

        import random

# Generate some random weather data
temp_inside = random.uniform(20.0, 30.0)
temp_outside = random.uniform(15.0, 25.0)
humidity = random.uniform(50.0, 60.0)
rain_rate = random.uniform(0.0, 10.0)
uv_index = random.uniform(0.0, 10.0)
wind_speed = random.uniform(5.0, 15.0)
barometer = random.uniform(1000.0, 1010.0)


        # Insert the data into the Weather table
        cur.execute("INSERT INTO Weather (DateTime, TemperatureInside, TemperatureOutside, Humidity, RainRate, UVIndex, WindSpeed, Barometer) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)", (timestamp, temp_inside, temp_outside, humidity, rain_rate, uv_index, wind_speed, barometer))

        # Commit the transaction
        conn.commit()

        # Wait for 5 seconds before inserting the next data point
        time.sleep(5)

# Close the cursor and database connection
cur.close()
conn.close()
